<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picMain.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>